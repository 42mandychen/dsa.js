import {PriorityQueue} from '../src/priorityqueue';

test('enqueue and dequeue - max priority element should be returned', () => {
  const priorityQueue = new PriorityQueue();
  priorityQueue.enqueue(10, 5);
  priorityQueue.enqueue(9, 7);
  priorityQueue.enqueue(11, 2);
  priorityQueue.enqueue(3, 10);
  priorityQueue.enqueue(6, 6);
  priorityQueue.enqueue(11, 8);
  priorityQueue.enqueue(4, 9);
  priorityQueue.enqueue(5, 12);
  let maxEle = priorityQueue.dequeue();
  expect(maxEle.priority).toBe(12);
  expect(maxEle.value).toBe(5);
  maxEle = priorityQueue.dequeue();
  expect(maxEle.priority).toBe(10);
  expect(maxEle.value).toBe(3);
  maxEle = priorityQueue.dequeue();
  expect(maxEle.priority).toBe(9);
  expect(maxEle.value).toBe(4);
  maxEle = priorityQueue.dequeue();
  expect(maxEle.priority).toBe(8);
  expect(maxEle.value).toBe(11);
  maxEle = priorityQueue.dequeue();
  expect(maxEle.priority).toBe(7);
  expect(maxEle.value).toBe(9);
  maxEle = priorityQueue.dequeue();
  expect(maxEle.priority).toBe(6);
  expect(maxEle.value).toBe(6);
  maxEle = priorityQueue.dequeue();
  expect(maxEle.priority).toBe(5);
  expect(maxEle.value).toBe(10);
  maxEle = priorityQueue.dequeue();
  expect(maxEle.priority).toBe(2);
  expect(maxEle.value).toBe(11);
  maxEle = priorityQueue.dequeue();
  expect(maxEle).toBeNull();
});
